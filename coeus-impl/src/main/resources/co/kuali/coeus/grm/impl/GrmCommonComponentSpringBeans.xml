<?xml version="1.0" encoding="UTF-8"?>
<!--
   - Kuali Coeus, a comprehensive research administration system for higher education.
   -
   - Copyright 2005-2016 Kuali, Inc.
   -
   - This program is free software: you can redistribute it and/or modify
   - it under the terms of the GNU Affero General Public License as
   - published by the Free Software Foundation, either version 3 of the
   - License, or (at your option) any later version.
   -
   - This program is distributed in the hope that it will be useful,
   - but WITHOUT ANY WARRANTY; without even the implied warranty of
   - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   - GNU Affero General Public License for more details.
   -
   - You should have received a copy of the GNU Affero General Public License
   - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd"
       profile="grm">

    <tx:annotation-driven transaction-manager="transactionManager" />
    <context:annotation-config />

    <bean id="grlImporter" abstract="true" class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean" p:singleton="true" p:mustExist="true" />

    <bean id="kcAttachmentDataAmazonClient" class="co.kuali.coeus.s3.api.EncryptedS3FileServiceFactoryBean">
        <property name="bucketName" value="${s3.bucket.name}" />
        <property name="region" value="${s3.region}" />
        <property name="accessKey" value="${s3.access.key}" />
        <property name="secretKey" value="${s3.secret.key}" />
        <property name="encryptionKey" value="${s3.encryption.key.file}" />
    </bean>

    <bean id="kcS3FileService" class="co.kuali.rice.coreservice.impl.attachment.S3FileServiceReflectionImpl">
        <property name="s3FileServiceClient" ref="kcAttachmentDataAmazonClient"/>
    </bean>

    <bean id="kcAttachmentDataDao" class="co.kuali.coeus.common.impl.attachment.KcAttachmentDataDaoS3Impl">
        <property name="kcS3FileService" ref="kcS3FileService"/>
        <property name="dataSource" ref="dataSource" />
        <property name="parameterService" ref="parameterService" />
    </bean>

    <bean id="kcAttachmentDataToS3ConversionJob" class="co.kuali.coeus.common.impl.attachment.KcAttachmentDataToS3ConversionImpl">
        <property name="kcS3FileService" ref="kcS3FileService"/>
        <property name="dataSource" ref="dataSource" />
        <property name="parameterService" ref="parameterService" />
    </bean>

    <bean id="kcAttachmentDataToS3ConversionJobDetail" class="org.quartz.impl.JobDetailImpl">
        <property name="jobClass" value="co.kuali.coeus.common.impl.attachment.KcAttachmentDataToS3ConversionImpl" />
        <property name="name" value="kcAttachmentDataToS3ConversionJobDetail" />
        <property name="durability" value="true" />
    </bean>

    <bean id="kcAttachmentDataToS3ConversionCronTrigger" class="org.kuali.coeus.sys.framework.scheduling.KcCronTriggerBean">
        <property name="jobDetail" ref="kcAttachmentDataToS3ConversionJobDetail" />
        <property name="parameterService" ref="parameterService" />
        <property name="dateTimeService" ref="dateTimeService" />
        <property name="cronExpressionParameterName" value="kcAttachmentDataToS3Conversion.cronExpression" />
        <property name="triggerEnabledParameterName" value="kcAttachmentDataToS3Conversion.enabled" />
        <property name="parameterNamespace" value="KC-SYS" />
        <property name="parameterComponent" value="All" />
    </bean>

    <bean id="riceNoteAttachmentDataToS3ConversionJobDetail" parent="grlImporter" p:serviceName="riceNoteAttachmentDataToS3ConversionJobDetail" />
    <bean id="riceNoteAttachmentDataToS3ConversionCronTrigger" class="org.kuali.coeus.sys.framework.scheduling.KcCronTriggerBean">
        <property name="jobDetail" ref="riceNoteAttachmentDataToS3ConversionJobDetail" />
        <property name="parameterService" ref="parameterService" />
        <property name="dateTimeService" ref="dateTimeService" />
        <property name="cronExpressionParameterName" value="riceNoteAttachmentDataToS3Conversion.cronExpression" />
        <property name="triggerEnabledParameterName" value="riceNoteAttachmentDataToS3Conversion.enabled" />
        <property name="parameterNamespace" value="KR-SYS" />
        <property name="parameterComponent" value="All" />
    </bean>

    <bean id="riceKradAttachmentDataToS3ConversionJobDetail" parent="grlImporter" p:serviceName="riceKradAttachmentDataToS3ConversionJobDetail" />
    <bean id="riceKradAttachmentDataToS3ConversionCronTrigger" class="org.kuali.coeus.sys.framework.scheduling.KcCronTriggerBean">
        <property name="jobDetail" ref="riceKradAttachmentDataToS3ConversionJobDetail" />
        <property name="parameterService" ref="parameterService" />
        <property name="dateTimeService" ref="dateTimeService" />
        <property name="cronExpressionParameterName" value="riceKradAttachmentDataToS3Conversion.cronExpression" />
        <property name="triggerEnabledParameterName" value="riceKradAttachmentDataToS3Conversion.enabled" />
        <property name="parameterNamespace" value="KR-SYS" />
        <property name="parameterComponent" value="All" />
    </bean>

    <bean id="kcCommonQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="schedulerName" value="grmCommonScheduler"/>
        <property name="exposeSchedulerInRepository" value="true" />
        <property name="triggers">
            <list merge="true">
                <ref bean="riceNoteAttachmentDataToS3ConversionCronTrigger" />
                <ref bean="riceKradAttachmentDataToS3ConversionCronTrigger" />
            </list>
        </property>
    </bean>

    <bean id="kcCommonQuartzPersistentScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="schedulerName" value="grmCommonPersistentScheduler"/>
        <property name="exposeSchedulerInRepository" value="true" />
        <property name="triggers">
            <list merge="true">
                <ref bean="kcAttachmentDataToS3ConversionCronTrigger" />
            </list>
        </property>
        <!--
            Injecting these services into the scheduler factory so it can be added to the job context
            which is passed to the executeInternal method of the job class.
        -->
        <property name= "schedulerContextAsMap">
            <map>
                <entry key="kcAttachmentDataDao">
                    <ref bean="kcAttachmentDataDao" />
                </entry>
                <entry key="dataSource">
                    <ref bean="dataSource" />
                </entry>
                <entry key="kcS3FileService">
                    <ref bean="kcS3FileService" />
                </entry>
                <entry key="parameterService">
                    <ref bean="parameterService" />
                </entry>
            </map>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.jobStore.tablePrefix">${kcQuartzDatabasePrefix}</prop>
                <prop key="org.quartz.jobStore.isClustered">${kc.org.quartz.jobStore.isClustered}</prop>
                <prop key="org.quartz.scheduler.instanceId">${kc.org.quartz.scheduler.instanceId}</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">${kc.org.quartz.jobStore.misfireThreshold}</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">${kc.org.quartz.jobStore.clusterCheckinInterval}</prop>
                <prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">${kc.org.quartz.jobStore.maxMisfiresToHandleAtATime}</prop>
            </props>
        </property>
        <property name="dataSource" ref="dataSource" />
        <!--
            This is set to true so that the tables are modified when the job is modified, otherwise
            manual deletion of values from tables will be required every time job is changed
        -->
        <property name="overwriteExistingJobs" value="true" />
    </bean>

</beans>
